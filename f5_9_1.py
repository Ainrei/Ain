import time # Импортируем стандартный модуль time для работы с временем (измерения времени выполнения функции)
from functools import wraps # Импортируем wraps из модуля functools, чтобы сохранить метаданные исходной функции при оборачивании ее в декоратор

# Декоратор, который выводит время выполнения.
def timethis(func): # Определяем декоратор timethis, который принимает функцию func в качестве аргумента
    @wraps(func) # Используем @wraps(func), чтобы сохранить имя и другие метаданные исходной функции
    def wrapper(*args, **kwargs):  # Внутри декоратора создаем функцию-обертку, которая будет выполнять измерение времени
        start = time.time() # Записываем время начала выполнения функции
        result = func(*args, **kwargs) # Вызываем исходную функцию с переданными аргументами и сохраняем результат
        end = time.time() # Записываем время окончания выполнения функции
        print(f"{func.__name__} выполнен за {end - start:.8f} секунд") # Выводим имя функции и время ее выполнения с точностью до 8 знаков после запятой
        return result # Возвращаем результат работы функции
    return wrapper  # Возвращаем функцию-обертку (декоратор), которая теперь будет вызывать исходную функцию с измерением времени

@timethis # Применяем декоратор timethis к функции factorial, чтобы измерить время ее выполнения
def factorial(n=3): # Определяем функцию factorial, которая вычисляет факториал числа n (по умолчанию n=3)
    if n < 0: # Проверяем, что n не отрицательно
        raise ValueError("Факториал не определен для отрицательных чисел") # Если n отрицательно, выбрасываем исключение
    elif n == 0 or n == 1:  # Если n равно 0 или 1, возвращаем 1 (по определению факториала)
        return 1
    else: # Для всех остальных значений n (больше 1) вычисляем факториал через цикл
        result = 1 # Начальное значение для результата
        for i in range(2, n + 1): # Перебираем все числа от 2 до n
            result *= i # Умножаем result на текущее число i
        return result  # Возвращаем результат вычисления факториала

# Пример использования
number = 5
print(f"Факториал {number} равен {factorial(number)}") # Выводим факториал числа number, при этом будет измерено время выполнения функции factorial
